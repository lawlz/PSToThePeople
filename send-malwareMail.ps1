<#
      .Synopsis
          This is a script to send in a request to wipe/reload an asset.

      .DESCRIPTION
         This will simply send in a ticket to have the asset either taken to us (widespread incident the $isAPT flag) 
         or if not a widespread incident, it will just send in the request for wipe and reload.
          

         REQUIREMENTS:
         Powershell AD module....  Install RSAT and then do the add/remove features and then install Powershell AD tools.

        AUTHOR: Jimmy James

      .EXAMPLE
         send-malwareMail.ps1 -computerName CORPCOMP -infusername jlawlz -malware trojan
      
      .LINK
        https://gallery.technet.microsoft.com/Password-Expiry-Email-177c3e27
        https://www.simple-talk.com/sysadmin/powershell/powershell-one-liners-variables,-parameters,-properties,-and-objects/
        http://technet.microsoft.com/en-us/library/ff730939.asp       
#>


##################################################################################################################
#GATHER PARAMS
##################################################################################################################
Param(
  [Parameter(Mandatory=$True,Position=0,ValueFromPipeline=$True)][string]$infUserName,
  [Parameter(Mandatory=$True,Position=1,ValueFromPipeline=$True)][string]$computerName,
  [Parameter(Mandatory=$False,Position=2,ValueFromPipeline=$True)][string]$description,
  [Parameter(Mandatory=$False,Position=3,ValueFromPipeline=$True)][string]$malware
 )

###################################################################################################################
#FUNCTIONS
###################################################################################################################

Function Status ($x) {
  if (($x) -eq 0){
      return "<font color='00FF00'> - Complete </font><br>"}
  else {
    return "<font color='#FFA500'> - In Progress </font><br>"
  }
}

# awesome way to open up an explorer window to get a file.
#http://stackoverflow.com/questions/22509719/how-to-enable-autocompletion-while-entering-paths
Function Get-FileName {   
    [System.Reflection.Assembly]::LoadWithPartialName("System.windows.forms") | Out-Null
    $OpenFileDialog = New-Object System.Windows.Forms.OpenFileDialog
    $OpenFileDialog.initialDirectory = $env:USERPROFILE
    $OpenFileDialog.filter = "All files (*.*)| *.*"
    $OpenFileDialog.ShowDialog() | Out-Null
    $OpenFileDialog.filename
}

# create some menu options for some Q&As
# just want to load this once
$yes = New-Object System.Management.Automation.Host.ChoiceDescription "&Yes", `
"Sends the email."
$no = New-Object System.Management.Automation.Host.ChoiceDescription "&No", `
"Does not send the email."
$descrOptions = [System.Management.Automation.Host.ChoiceDescription[]]($yes, $no)
function prompt-forChoice {
  Param(
    [Parameter(Mandatory=$True,Position=0,ValueFromPipeline=$True)][string]$Title,
    [Parameter(Mandatory=$True,Position=1,ValueFromPipeline=$True)][string]$descrMsg
  )
  $malwareDescr = $host.ui.PromptForChoice($Title, $descrMsg, $descrOptions, 0)
  return $malwareDescr
}


##################################################################################################################
# VARIABLES
##################################################################################################################
# Please Configure the following variables....
#Pay attention to:  testRecipient and helpdeskRCPT
#if you set $test to true then it will send to yourself.
$currentUser = [Environment]::UserName
$RCPT = "helpdesk@lawlz.com"

#now grab information about the user so that the malware removal tiger team can more quickly respond
# first check for Active Directory before running
try {
  $infUserProps = get-aduser $infUserName -properties *
  $userPhoneNumber =  $infUserProps.OfficePhone
  #check for the office phone, if none, use mobile
  if (!($userPhoneNumber)) {
          $userPhoneNumber = $infUserProps.MobilePhone
      }
  $userJobTitle = $infUserProps.title
  $userLocation = $infUserProps.Office
}
catch {
  Write-Host "`nYou are not connected to AD or have not entered a valid user.`n" -ForegroundColor red -BackgroundColor black
      $infUserProps = $user
      $userJobTitle = "Title not available"
      $userLocation = "Location not available"
      $userPhoneNumber = "Phone not available"
}

#this is for adding a malware name.  It could probably be done better...
$descrTitle = "Enter a malware name"
$message = "Would you like to enter a malware name?"
$malwareDescr = prompt-forchoice -Title $descrTitle -descrMsg $message 

#Now if yes then ask for description.
switch ($malwareDescr){
    0 {$malware = read-host "Enter a malware name"}
    1  {"You selected not to add a malware name"
        $malware =  "malicious software"      
      }
}

#this is for adding a description.  It could probably be done better...
$descrTitle = "Enter a description"
$message = "Would you like to enter a brief description of this malware type?"
$malwareResult = prompt-forchoice -Title $descrTitle -descrMsg $message 

#Now if yes then ask for description.
switch ($malwareResult){
    0 {$description = read-host "Enter a description"}
    1  {"You selected not to add description"}
}

#add 
#this is for adding a description.  It could probably be done better...
$descrTitle = "Is this a major incident?"
$message = "More targeted and sophisticated malware or wide spread infection?"
$isAPT = prompt-forchoice -Title $descrTitle -descrMsg $message 

if (($isAPT) -eq 0){
  #is memory captured
  $descrTitle = "Is Memory Captured?"
  $message = "Have you contacted FIS to do mem scrape?"
  $option = $host.ui.PromptForChoice($descrTitle, $message, $descrOptions, 0)
  $isMem = Status $option 

  # did you contact the user
  $descrTitle = "Contacted User"
  $message = "Have you contacted user to explain what has happened?"
  $option = $host.ui.PromptForChoice($descrTitle, $message, $descrOptions, 0)
  $isUser = Status $option

  # block added to dns/web filter device
  $descrTitle = "Added to Proxy"
  $message = "Have you added a block in the proxy for the malicious domain(s)?"
  $option = $host.ui.PromptForChoice($descrTitle, $message, $descrOptions, 0)
  $isProxy = Status $option 

  # Conduct dynamic malware scan
  $descrTitle = "Analyzed in FireEye"
  $message = "Have you completely analyzed the file in FireEye?"
  $option = $host.ui.PromptForChoice($descrTitle, $message, $descrOptions, 0)
  $isAnalyzd = Status $option 

  # build the subject of email
  $subject ="MAJOR MALWARE INCIDENT - $computerName - $infUserName "

  #Email Body Set Here, Note You can use HTML, including Images.
  #TODO create additional bodies for the incident types, maybe...
  $body ="
  Workstation $computerName is infected with $malware. $description <br>
  <br>
  Machine:       $computerName <br>
  User:          $infUserName ($infUserName) <br>
  Title:         $userJobTitle <br>          
  Phone:         $userPhoneNumber  <br> 
  Location:      $userLocation  <br> 
  <br>
  <br>
  Action Items: <br>
  <br>
  <font color='#FF0000'> Please do not interact with the affected system without instructions from IT Security and/or $currentUser.</font><br>
  <br>
  <br>
  Forensics:
  <ul>
    <li> Live Memory Capture $isMem </li>
  </ul>
  Client Support:
  <ul>
    <li> Get a replacement system for user. </li>
    <li> Collect affected system once Security Operations gives the go ahead. </li>
    <li> Send affected system to Security Operations for further review. </li>
    <li> Assist user in changing their domain password. </li>
  </ul>
  Security Operations:
  <ul>
    <li> Contact the user to explain what has taken place and provide guidance throughout incident lifecycle $isUser </li>
    <li> Instruct User to change password </li>
    <li> Obtain and analyze the malware and site information gathered from security and network tools  $isAnalyzd </li>
    <li> Proxy block for malicious domain  $isProxy  </li>
  </ul>
  <br>
  Please feel free to reach out to me if you have any questions or concerns.  Thank you.
  <br> 
  <br> 
  <br>"
}

else  {
  #start building the email formatting.
  $subject ="MALWARE INCIDENT - $infUserName - $computerName"

  #Email Body Set Here, Note You can use HTML, including Images.
  #TODO create additional bodies for the incident types, maybe...
  $body ="
  Workstation $computerName is infected with $malware. $description <br>
  <br>
  Machine:       $computerName <br>
  User:          $infUserName <br>
  Title:         $userJobTitle <br>          
  Phone:         $userPhoneNumber  <br>
  Location:      $userLocation  <br> 
  <br>
  <br>
  Action Items: <br>
  <br>
  <ul>
    <li> Notify the user that their machine has malware on it and needs to be cleaned. </li>
    <li> DISCONNECT FROM THE NETWORK,  at the earliest possible time. </li>
    <ul>
      <li> Disable wireless/unplug the copper Ethernet connection.
    </ul>
    <li> Once asset is onsite, then IT will boot it up into safe mode, login as local administrator, mount the prescribed external storage device, and backup the following folders:
    <ul>
      <li> %userprofile%\Desktop 
      <li> %userprofile%\Documents 
      <li> %userprofile%\Favorites 
    </ul>
    <li> Tag the asset to be wiped and reloaded as having malware on it when sending back to the  asset management.</li>
    <ul>
      <li> Sticky note or red tape can be used to mark the asset. 
    </ul>
    <li> The files will then be scanned from an identified asset that has Security Engineering prescribed scan tools installed. </li>
    <ul>
      <li> (Optional) Quarantine or hold the files for 48 hours and then conduct the scan with a fully updated ruleset.
    </ul>
    <li> Once the necessary data is backed up, fully wipe (quick wipe is fine) the hard drive and reload the  operating system from the network.  </li> 
    <li> Restore the user's data to either a new system or their same system once wiped and reloaded. </li>
    <li> Assist user in changing their domain password. </li>
  </ul>
  <br>
  Please feel free to reach out to me if you have any questions or concerns.  Thank you.
  <br> 
  <br>
  $currentUser<br>
  IT Security
  <br>"
}

#TODO make this work with more than 2 attachments.
if (($isAttach) -eq 0){
    if (-not (test-path $attachment)) {
      $attachment = Get-FileName
    }
    else {
      $descrTitle = "Is there any other artifacts that you would like to attach?"
      $message = "Add the full path here." 
      $isMoreAttach = prompt-forchoice -Title $descrTitle -descrMsg $message 
      switch ($isMoreAttach){
        0 {$attachment1 = Get-FileName}
        1  {"You selected not to add an attachment"}
      }
    }
}

###################################################################################################################
#WORK
###################################################################################################################

#create the outlook mail object
$Outlook = New-Object -ComObject Outlook.Application
$Mail = $Outlook.CreateItem(0)
$Mail.recipients.add($RCPT)
$Mail.cc = "ITOperationsSecurityMonitoring@lawlz.com"
# for for APT or more widespread investigation that requires forensics and others
# you can kpy the recipients.add line and add more emailz.
if (($isApt) -eq 0) {
  $Mail.recipients.add("ForensicServicesInvestigations@lawlz.com")
}
# In TODO this is the part to add the foreach loop to add more attach
if ($attachment){
  $Mail.Attachments.add($attachment)
}
if ($attachment1) {
  $Mail.Attachments.add($attachment1)
}
$Mail.HTMLbody = $body
$Mail.Subject = $subject
# pop out the email, just trust it (allow, allow, allow)
$Mail.display()